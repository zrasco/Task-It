@using TaskItSite.Models.MainViewModels
@model TaskItSite.Models.MainViewModels.FeedViewModel

@{
    ViewData["Title"] = "Feed";
}

<h2>Feed for @Model.CurrentUser.FullName</h2>
@{
        for (var i = 0; i < Model.FeedItems.Count; i++)
        {
            string bgcolor = "Khaki";
            FeedItem feedItem = Model.FeedItems[i];

            switch (feedItem.ItemType)
            {
                case FeedItemType.Achievement:
                    {
                        bgcolor = "Aquamarine";
                        break;
                    }
                case FeedItemType.Task:
                    {
                        bgcolor = "AntiqueWhite";
                        break;
                    }
                case FeedItemType.Post:
                    {
                        bgcolor = "BurlyWood";
                        break;
                    }
                case FeedItemType.Default:
                default:
                    {
                        bgcolor = "Khaki";
                        break;
                    }
            }

        <p><u>Feed item #@(i+1)</u></p>
        <p><img src="@feedItem.ImageData" width="20" height="20" /> @Html.Label(feedItem.FromUser.FullName) on @feedItem.Occured</p>
        <p style="background-color: @bgcolor">@feedItem.Text</p>
        }
    }

<form method="post">
    <div class="form-group" style="margin-top:100px">
        <label asp-for="MyPostText" class="control-label"></label>
        <input asp-for="MyPostText" class="form-control" />
        @Html.Partial("~/Views/Manage/_StatusMessage.cshtml", Model.StatusMessage)
        <button type="submit" class="btn btn-default">Submit post!</button>
    </div>
</form>
